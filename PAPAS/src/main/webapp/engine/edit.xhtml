<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<h:html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f5="http://xmlns.jcp.org/jsf/passthrough"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:rich="http://richfaces.org/rich">
	
<h:head>
			<h:outputScript library="js" name="viewStateFix.js" />
</h:head>

<h:form id="mainForm">
	<h:panelGrid id="panel" columns="2" cellpadding="0">

		<h:outputText value="#{msg['engine.edit.make']}" />

		<h:panelGroup id="makePanel">
			<h:selectOneMenu id="makeSelect" value="#{engineEditBean.manufacturerId}"	style="width:350px;" styleClass="chosen-select">
				<f:selectItem itemLabel="" itemValue="#{null}" />
				<f:selectItems value="#{engineEditBean.availableManufacturerList}" />
				<a4j:ajax listener="#{engineEditBean.updateModelList}" execute="@this" render="modelPanel codePanel typePanel"/>
			</h:selectOneMenu>
			<h:outputScript>
               jQuery("#mainForm\\:makeSelect").chosen({});
        	</h:outputScript>
		</h:panelGroup>
		
		
		<h:outputText value="#{msg['engine.edit.model']}" />

		<h:panelGroup id="modelPanel">
			<h:selectOneMenu id="modelSelect" value="#{engineEditBean.modelId}" style="width:350px;" styleClass="chosen-select">
				<f:selectItem itemLabel="" itemValue="#{null}" />
				<f:selectItems value="#{engineEditBean.availableModelList}" />
				<a4j:ajax listener="#{engineEditBean.updateCodeList}" execute="@this" render="codePanel typePanel"/>
			</h:selectOneMenu>
			<h:outputScript>
               jQuery("#mainForm\\:modelSelect").chosen({});
        	</h:outputScript>
		</h:panelGroup>

		<h:outputText value="#{msg['engine.edit.code']}" />

		<h:panelGroup id="codePanel">
			<h:selectOneMenu id="codeSelect" value="#{engineEditBean.engineId}" style="width:350px;" styleClass="chosen-select">
				<f:selectItem itemLabel="" itemValue="#{null}" />
				<f:selectItems value="#{engineEditBean.availableEngineCodesList}" />
				<a4j:ajax listener="#{engineEditBean.updateTypeList}" execute="@this" render="typePanel"/>
			</h:selectOneMenu>
			<h:outputScript>
               jQuery("#mainForm\\:codeSelect").chosen({});
        	</h:outputScript>
		</h:panelGroup>
		
		<h:outputText value="#{msg['engine.edit.type']}" />

		<h:panelGroup id="typePanel">
			<h:selectOneMenu id="typeSelect" value="#{engineEditBean.typeId}" style="width:350px;" styleClass="chosen-select">
				<f:selectItem itemLabel="" itemValue="#{null}" />
				<f:selectItems value="#{engineEditBean.availableTypesList}" />
			</h:selectOneMenu>
			<h:outputScript>
               jQuery("#mainForm\\:typeSelect").chosen({});
        	</h:outputScript>
		</h:panelGroup>
		
		<h:outputText value="#{msg['engine.edit.Location']}" />
		
		<h:inputText value="#{engineEditBean.location}" />
		
		<h:outputText value="#{msg['engine.edit.codefull']}" />
		
		<h:inputText value="#{engineEditBean.engineCodeFull}" />
		
		
		<h:outputText value="#{msg['engine.edit.year']}" />

		<h:panelGroup id="yearPanel">
			<h:selectOneMenu id="yearSelect" value="#{engineEditBean.year}" style="width:350px;" styleClass="chosen-select">
				<f:selectItem itemLabel="" itemValue="#{null}" />
				<f:selectItems value="#{engineEditBean.availableYearsList}" />
			</h:selectOneMenu>
			<h:outputScript>
               jQuery("#mainForm\\:yearSelect").chosen({});
        	</h:outputScript>
		</h:panelGroup>
		
		<h:outputText value="#{msg['engine.edit.price1']}" />
		
		<h:inputText value="#{engineEditBean.price1}" />
		
		<h:outputText value="#{msg['engine.edit.price2']}" />
		
		<h:inputText value="#{engineEditBean.price2}" />
		
		<h:commandButton value="Upload photos">
        	<rich:componentControl target="popup" operation="show" />
    	</h:commandButton>
    	
    	<p></p>
    	
    	<h:panelGroup id="pathList" layout="block">
	    	<ui:repeat value="#{engineEditBean.pathList}" var="item">
	    		#{item}<br/>
			</ui:repeat>
		</h:panelGroup>
		
		<p></p>
		
		<h:commandButton value="#{msg['engine.edit.save']}" execute="@form" action="#{engineEditBean.doSave}" />
		
		<p></p>
	
		<h:messages />
		
	</h:panelGrid>
</h:form>

<rich:popupPanel id="popup" modal="false" autosized="true" resizeable="false"  minHeight="300" minWidth="500" 
            height="500" width="500">
        <f:facet name="header">
            <h:outputText value="Upload photos" />
        </f:facet>
 
		<div class="main">            
            <h:form id="uploadFormId" enctype="multipart/form-data">
            
                <div class="file-upload">
               		 <h:commandButton value="Add photos" type="button"/>
                    <h:inputFile id="fileToUploadId" f5:accept="image/*" f5:multiple="multiple" title="Select Files" value="#{engineEditBean.files}"/>
                    
                </div>                
                <table id="thumbnails" border="0"></table>
                <h:panelGrid columns="3" border="0" cellspacing="5" cellpadding="3" styleClass="panelColumns">
                    <h:commandButton id="uploadBtnId" value="Upload" actionListener="#{engineEditBean.upload}" render="uploadMessagesId" onevent="uploadProgress" onerror="uploadError">
                        <f:attribute name="maxFilesNumber" value="5"/> 
                        <f:attribute name="maxFileSize" value="2097152"/> 
                        <f:attribute name="fileTypes" value="image/"/>
                        <f:ajax execute="@form" render="mainForm:pathList"></f:ajax> 
                    </h:commandButton>
                    <h:commandButton id="cancelBtnId" type="button" onclick="sendAllFilesToTrash(true);" value="Clear"/>
                    <h:commandButton id="closeBtnId" type="button" onclick="sendAllFilesToTrash(true); #{rich:component('popup')}.hide(); return false; " value="Close" render="mainForm:pathList"/>         
                    <f:verbatim>
                        <img id="progressBarId" width="55" height="55" class="ajax-loader"/>
                    </f:verbatim>
                </h:panelGrid>                               
                <h:messages id="uploadMessagesId" showDetail="false" showSummary="true" for="fileToUploadId" infoClass="success" errorClass="error"/>
                <h:inputHidden id="trashId" value="#{engineEditBean.trash}"/>                               
            </h:form>                  
            <div id="fatalErrorsId" class="error"></div>
        </div>
        
         <script>
            // <![CDATA[

            var trash = {items: []};
            var nrOfFiles = 0;
            var rejectedFiles = false;
            var OK = "";
            var WRONG_TYPE = "You can upload only images files !";
            var WRONG_SIZE = "You can upload only images smaller than 2 MB !";

            function validateLevel(level) {
                if (nrOfFiles === 0) {
                    document.getElementById("fatalErrorsId").innerHTML = "No valid files selected !";
                    return false;
                }
                if (level === 'low') {
                    return true;
                } else if (level === 'high') {
                    if (rejectedFiles) {
                        sendAllFilesToTrash(true);
                        document.getElementById("fatalErrorsId").innerHTML = "Please, provide only valid files !";
                        return false;
                    }
                }
            }

            function handleFileSelect(evt) {

                rejectedFiles = false;
                nrOfFiles = 0; //rm
                var MAX_FILES = 5;
                trash = {items: []};
                var MAX_MB = 2097152; //2 MB               
                var WRONG_NUMBER = "You can select maxim 5 images !";

                document.getElementById("uploadFormId:uploadMessagesId").innerHTML = "";
                document.getElementById("fatalErrorsId").innerHTML = "";
                document.getElementById('thumbnails').innerHTML = ""; //rm

                evt.stopPropagation();
                evt.preventDefault();
                var files = evt.target.files;

                if (files.length > MAX_FILES) {

                    sendAllFilesToTrash(true);
                    document.getElementById("fatalErrorsId").innerHTML = ['<span>', WRONG_NUMBER, '</span>'].join('');
                } else {
                    for (var i = 0; i < files.length; i++) {

                        var f = files[i];
                        nrOfFiles++;

                        // only process image files - this should not appear since
                        // we have set f5:accept="image/*" on <h:inputFile>
                        if (!f.type.match('image.*')) {
                            addFileToThumbnails(f, WRONG_TYPE);
                            continue;
                        }

                        // only files smaller than 2 MB
                        if (f.size > MAX_MB) {
                            addFileToThumbnails(f, WRONG_SIZE);
                            continue;
                        }

                        //optional - you may add here file name length validation !

                        var reader = new FileReader();

                        // closure to capture the file information
                        reader.onload = (function (theFile) {
                            return function (e) {
                                addFileToThumbnails(theFile, OK, e.target.result);
                            };
                        })(f);
                        // read in the image file as a data URL
                        reader.readAsDataURL(f);
                    }
                    checkForValidFiles();
                }
            }

            function addFileToThumbnails(theFile, errCode, filePath) {

                var KB = 1024;
                var MB = 1048576; //1 MB
                var MAX_LENGTH = 30; //characters

                // render thumbnail
                var fileName = theFile.name;
                if (theFile.name.length > MAX_LENGTH) {
                    fileName = theFile.name.substring(0, MAX_LENGTH) + "...";
                }
                var fileSize = 0;
                if (theFile.size > MB)
                    fileSize = (Math.round(theFile.size * 100 / (MB)) / 100).toString() + 'MB';
                else
                    fileSize = (Math.round(theFile.size * 100 / KB) / 100).toString() + 'KB';

                // populate the thumbnails table
                var thumbnails = document.getElementById("thumbnails");
                var row = thumbnails.insertRow(-1);

                // add a thumb for an image
                if (errCode === OK) {
                    var cellThumb = row.insertCell(0);
                    var cellName = row.insertCell(1);
                    var cellTrash = row.insertCell(2);
                    cellThumb.style.width = '60px';
                    cellThumb.innerHTML = ['<div class="grow"><img class="thumb" src="', filePath,
                        '" title="', escape(theFile.name), '"/></div>'].join('');
                    cellName.style.width = '460px';
                    cellName.innerHTML = ['<span class="files-info">', fileName, '</span><br/>\n\
                                <span class="files-size">', fileSize, '<span>'].join('');
                    cellTrash.style.width = '20px';
                    cellTrash.innerHTML = ['<div class="bw"><img src="./resources/default/images/trash.png"\n\
                         onclick="sendFileToTrash(', row.rowIndex, ',\'', theFile.name, '\');" title=""/></div>'].join('');
                }

                // a thumb for a non-valid image
                if (errCode === WRONG_TYPE || errCode === WRONG_SIZE) {
                    var cellErr = row.insertCell(0);
                    cellErr.colSpan = "3";
                    cellErr.style.width = '540px';
                    cellErr.innerHTML = ['<div class="err-div"><img src="./resources/default/images/err.png"/>\n\
                        <span class="files-info">', fileName, ' (', fileSize, ')</span><br/>', errCode, '</div>'].join('');
                    rejectedFiles = true;
                    markForTrash(fileName);
                }
            }

            function sendAllFilesToTrash(cleanThumbnails) {
                nrOfFiles = 0;
                document.getElementById('uploadFormId:fileToUploadId').value = "";
                document.getElementById("fatalErrorsId").innerHTML = "";
                document.getElementById("uploadFormId:uploadMessagesId").innerHTML = "";
                // clear the thumbnails table
                if (cleanThumbnails) {
                    document.getElementById('thumbnails').innerHTML = "";
                }
                // clean the trash
                trash = {items: []};
                document.getElementById('uploadFormId:trashId').value = JSON.stringify(trash);
            }

            function sendFileToTrash(row, fileName) {
                var thumbnails = document.getElementById("thumbnails");
                thumbnails.rows.item(row).style.display = 'none';
                if ((trash.items.length + 1) === nrOfFiles) {
                    sendAllFilesToTrash(true);
                } else {
                    markForTrash(fileName);
                }
            }

            function markForTrash(fileName) {
                // add file to trash
                trash.items.push({name: fileName});
                document.getElementById('uploadFormId:trashId').value = JSON.stringify(trash);
            }

            function checkForValidFiles() {
                if (trash.items.length === nrOfFiles) {
                    sendAllFilesToTrash(false);
                }
            }

            function uploadError(data) {
                var errorMsg = "Sorry, unexpected error occured !";
                if (data.status === "serverError") {
                    errorMsg = "Sorry, the server response contains an error !";
                } else if (data.status === "malformedXML") {
                    errorMsg = "Sorry, an well-formed error occured !";
                } else if (data.status === "httpError") {
                    errorMsg = "Sorry, a communication protocol problem occured !";
                } else if (data.status === "emptyResponse") {
                    errorMsg = "Sorry, the server did't respond !";
                }
                document.getElementById("fatalErrorsId").innerHTML = ['<span>', errorMsg, '</span>'].join('');
            }

            function uploadProgress(data) {
                if (data.status === "begin") {
                    start();
                }
                if (data.status === "complete") {
                    stop();
                }
            }

            function start() {
                document.getElementById('uploadFormId:uploadBtnId').disabled = true;
                document.getElementById('cancelBtnId').disabled = true;
                document.getElementById("progressBarId").setAttribute("src", "./resources/default/images/ajaxloader.gif");
            }

            function stop() {
                document.getElementById('uploadFormId:uploadBtnId').disabled = false;
                document.getElementById('cancelBtnId').disabled = false;
                document.getElementById("progressBarId").removeAttribute("src");
                sendAllFilesToTrash(true);
            }

            if (window.File && window.FileReader && window.FileList && window.Blob)
            {
                document.getElementById('uploadFormId:fileToUploadId').addEventListener('change', handleFileSelect, false);
            } else {
                alert("Please update your browser to support new APIs!");
            }
            
            //]]>
        </script>
</rich:popupPanel>



       




</h:html>